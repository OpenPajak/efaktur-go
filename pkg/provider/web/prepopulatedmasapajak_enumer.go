// Code generated by "enumer -type=PrepopulatedMasaPajak -trimprefix=PrepopulatedMasaPajak_ -sql"; DO NOT EDIT.

package web

import (
	"database/sql/driver"
	"fmt"
	"strings"
)

const _PrepopulatedMasaPajakName = "UNSELECTEDJanuaryFebruaryMarchAprilMayJuneJulyAugustSeptemberOctoberNovemberDecember"

var _PrepopulatedMasaPajakIndex = [...]uint8{0, 10, 17, 25, 30, 35, 38, 42, 46, 52, 61, 68, 76, 84}

const _PrepopulatedMasaPajakLowerName = "unselectedjanuaryfebruarymarchaprilmayjunejulyaugustseptemberoctobernovemberdecember"

func (i PrepopulatedMasaPajak) String() string {
	if i < 0 || i >= PrepopulatedMasaPajak(len(_PrepopulatedMasaPajakIndex)-1) {
		return fmt.Sprintf("PrepopulatedMasaPajak(%d)", i)
	}
	return _PrepopulatedMasaPajakName[_PrepopulatedMasaPajakIndex[i]:_PrepopulatedMasaPajakIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _PrepopulatedMasaPajakNoOp() {
	var x [1]struct{}
	_ = x[PrepopulatedMasaPajak_UNSELECTED-(0)]
	_ = x[PrepopulatedMasaPajak_January-(1)]
	_ = x[PrepopulatedMasaPajak_February-(2)]
	_ = x[PrepopulatedMasaPajak_March-(3)]
	_ = x[PrepopulatedMasaPajak_April-(4)]
	_ = x[PrepopulatedMasaPajak_May-(5)]
	_ = x[PrepopulatedMasaPajak_June-(6)]
	_ = x[PrepopulatedMasaPajak_July-(7)]
	_ = x[PrepopulatedMasaPajak_August-(8)]
	_ = x[PrepopulatedMasaPajak_September-(9)]
	_ = x[PrepopulatedMasaPajak_October-(10)]
	_ = x[PrepopulatedMasaPajak_November-(11)]
	_ = x[PrepopulatedMasaPajak_December-(12)]
}

var _PrepopulatedMasaPajakValues = []PrepopulatedMasaPajak{PrepopulatedMasaPajak_UNSELECTED, PrepopulatedMasaPajak_January, PrepopulatedMasaPajak_February, PrepopulatedMasaPajak_March, PrepopulatedMasaPajak_April, PrepopulatedMasaPajak_May, PrepopulatedMasaPajak_June, PrepopulatedMasaPajak_July, PrepopulatedMasaPajak_August, PrepopulatedMasaPajak_September, PrepopulatedMasaPajak_October, PrepopulatedMasaPajak_November, PrepopulatedMasaPajak_December}

var _PrepopulatedMasaPajakNameToValueMap = map[string]PrepopulatedMasaPajak{
	_PrepopulatedMasaPajakName[0:10]:       PrepopulatedMasaPajak_UNSELECTED,
	_PrepopulatedMasaPajakLowerName[0:10]:  PrepopulatedMasaPajak_UNSELECTED,
	_PrepopulatedMasaPajakName[10:17]:      PrepopulatedMasaPajak_January,
	_PrepopulatedMasaPajakLowerName[10:17]: PrepopulatedMasaPajak_January,
	_PrepopulatedMasaPajakName[17:25]:      PrepopulatedMasaPajak_February,
	_PrepopulatedMasaPajakLowerName[17:25]: PrepopulatedMasaPajak_February,
	_PrepopulatedMasaPajakName[25:30]:      PrepopulatedMasaPajak_March,
	_PrepopulatedMasaPajakLowerName[25:30]: PrepopulatedMasaPajak_March,
	_PrepopulatedMasaPajakName[30:35]:      PrepopulatedMasaPajak_April,
	_PrepopulatedMasaPajakLowerName[30:35]: PrepopulatedMasaPajak_April,
	_PrepopulatedMasaPajakName[35:38]:      PrepopulatedMasaPajak_May,
	_PrepopulatedMasaPajakLowerName[35:38]: PrepopulatedMasaPajak_May,
	_PrepopulatedMasaPajakName[38:42]:      PrepopulatedMasaPajak_June,
	_PrepopulatedMasaPajakLowerName[38:42]: PrepopulatedMasaPajak_June,
	_PrepopulatedMasaPajakName[42:46]:      PrepopulatedMasaPajak_July,
	_PrepopulatedMasaPajakLowerName[42:46]: PrepopulatedMasaPajak_July,
	_PrepopulatedMasaPajakName[46:52]:      PrepopulatedMasaPajak_August,
	_PrepopulatedMasaPajakLowerName[46:52]: PrepopulatedMasaPajak_August,
	_PrepopulatedMasaPajakName[52:61]:      PrepopulatedMasaPajak_September,
	_PrepopulatedMasaPajakLowerName[52:61]: PrepopulatedMasaPajak_September,
	_PrepopulatedMasaPajakName[61:68]:      PrepopulatedMasaPajak_October,
	_PrepopulatedMasaPajakLowerName[61:68]: PrepopulatedMasaPajak_October,
	_PrepopulatedMasaPajakName[68:76]:      PrepopulatedMasaPajak_November,
	_PrepopulatedMasaPajakLowerName[68:76]: PrepopulatedMasaPajak_November,
	_PrepopulatedMasaPajakName[76:84]:      PrepopulatedMasaPajak_December,
	_PrepopulatedMasaPajakLowerName[76:84]: PrepopulatedMasaPajak_December,
}

var _PrepopulatedMasaPajakNames = []string{
	_PrepopulatedMasaPajakName[0:10],
	_PrepopulatedMasaPajakName[10:17],
	_PrepopulatedMasaPajakName[17:25],
	_PrepopulatedMasaPajakName[25:30],
	_PrepopulatedMasaPajakName[30:35],
	_PrepopulatedMasaPajakName[35:38],
	_PrepopulatedMasaPajakName[38:42],
	_PrepopulatedMasaPajakName[42:46],
	_PrepopulatedMasaPajakName[46:52],
	_PrepopulatedMasaPajakName[52:61],
	_PrepopulatedMasaPajakName[61:68],
	_PrepopulatedMasaPajakName[68:76],
	_PrepopulatedMasaPajakName[76:84],
}

// PrepopulatedMasaPajakString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func PrepopulatedMasaPajakString(s string) (PrepopulatedMasaPajak, error) {
	if val, ok := _PrepopulatedMasaPajakNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _PrepopulatedMasaPajakNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to PrepopulatedMasaPajak values", s)
}

// PrepopulatedMasaPajakValues returns all values of the enum
func PrepopulatedMasaPajakValues() []PrepopulatedMasaPajak {
	return _PrepopulatedMasaPajakValues
}

// PrepopulatedMasaPajakStrings returns a slice of all String values of the enum
func PrepopulatedMasaPajakStrings() []string {
	strs := make([]string, len(_PrepopulatedMasaPajakNames))
	copy(strs, _PrepopulatedMasaPajakNames)
	return strs
}

// IsAPrepopulatedMasaPajak returns "true" if the value is listed in the enum definition. "false" otherwise
func (i PrepopulatedMasaPajak) IsAPrepopulatedMasaPajak() bool {
	for _, v := range _PrepopulatedMasaPajakValues {
		if i == v {
			return true
		}
	}
	return false
}

func (i PrepopulatedMasaPajak) Value() (driver.Value, error) {
	return i.String(), nil
}

func (i *PrepopulatedMasaPajak) Scan(value interface{}) error {
	if value == nil {
		return nil
	}

	var str string
	switch v := value.(type) {
	case []byte:
		str = string(v)
	case string:
		str = v
	case fmt.Stringer:
		str = v.String()
	default:
		return fmt.Errorf("invalid value of PrepopulatedMasaPajak: %[1]T(%[1]v)", value)
	}

	val, err := PrepopulatedMasaPajakString(str)
	if err != nil {
		return err
	}

	*i = val
	return nil
}
